

# This file was *autogenerated* from the file td3.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_10 = Integer(10); _sage_const_15 = Integer(15); _sage_const_128 = Integer(128); _sage_const_256 = Integer(256)
def f(x,n):
    return (x**_sage_const_2 +_sage_const_1 )%n

def pollard_rho(n):
    x_k=_sage_const_1 
    x_2k=_sage_const_1 

    x_k=f(x_k,n)
    x_2k=f(f(x_2k,n),n)
    while gcd(x_k-x_2k, n)==_sage_const_1 :
        x_k=f(x_k,n)
        x_2k=f(f(x_2k,n),n)
    return gcd(x_k-x_2k, n)


p=ZZ.random_element(_sage_const_10 **_sage_const_10 , _sage_const_10 **_sage_const_15 ).next_prime()
q=ZZ.random_element(_sage_const_2 **_sage_const_128 , _sage_const_2 **_sage_const_256 ).next_prime()

n=p*q
print("Facteurs avec sage :", factor(n))
print("Facteurs avec pollard : ", pollard_rho(n))

